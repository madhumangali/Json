React :-
--------
React is an opensorce library of javascript for building user interfaces.
it is a not framework.
react focuses on building UI,it not focuses http req,routing ...etc.
it is used to develop web applications.

why we need to learn ract ?
----------------------------
Create and Maintained by facebook.
High communtiy.

Component Based Architecture :-
---------------------------------
it is same as microservice in java , break the project in to samll encapsulated parts, by this we can build complex ui easily.
Reusable code.
React is declarative -
1. Tell React what you want and react will build the actual ui.
2.React will handle efficently updating and rendering of the componets.
3.Dom Updates are handles gracefully in react.
Seamlessly integrate react into any of your applications.
Portion of your page or a complete page or even an entire application itself can fit
React native for mobile applications.

Prerequisites :-
------------------
HTML, CSS and JavaScript fundamentals
ES6
JavaScript - 'this' keyword, filter, map and reduce
ES6 - let & const, arrow functions, template literals, default parameters, object literals, rest and
spread operators and destructuring assignment.
React from scratch.

Pacakge Structure 
we need node and vscode id .

components :-
--------------
we can many no of componets in react as per for requirement.
component code file should be saved with (.js) extension.

Component Types :-
-----------------
1. Stateless Functional Component          2. Stateful Class Component

JavaScript Functions                         Class extending Component class
                                               Render method returning HTML
                                              class Welcome extends React.Component {
function Welcome (props) {                             render() {
return <h1>Hello, {props.name}</h1>;              return <h1>Hello, {this.props.name}</h1>;
                                                 }
                                                 }
}

Components Summary :-
----------------------
Components describe a part of the user interface
They are re-usable and can be nested inside other components
Two Types -
• Stateless Functional Components
• Stateful Class Components

Functional components :-
------------------------
properties (props) -> JavaScript Function -> Html (JSX)
export statement is necessary whenever we need use components in another components.
export default statement -> we can write reference variable name as we wish.
export statement -> here we need write reference variable name as it is as component name

Class components :-
--------------------
class components is also one of the components same as Funtional components.

Functional vs Class components :-
----------------------------------
Simple functions                               More feature rich
Use Func components as much as possible        Maintain their own private data - state
Absence of 'this' keyword                      Complex Ul logic
Solution without using state                   Provide lifecycle hooks                            
Mainly responsible for the UI                  Stateful/ smart/ container
Stateless/ Dumb/ Presentational

Hooks :-
-------------

No breaking changes.
Completely opt-in & 100% backwards-compatible.
What ever we've learned so far in this series still holds good.
Component types - Functional components and Class components.
Using state, lifecycle methods and 'this' binding.
After understanding state, event binding and lifecycle hooks in class components.

JSX  :-
------------

JavaScript XML (JSX) - Extension to the JavaScript language syntax.
Write XML-like code for elements and components.
JSX tags have a tag name, attributes, and children.
JSX is not a necessity to write React applications.
JSX makes your react code simpler and elegant.
JSX ultimately transpiles to pure JavaScript which is understood by the browsers.

JSX differences :-
-------------------

Class -> className
for -> htmlFor
camelCase property naming convention
onclick -> onClick
tabindex -> tabindex
